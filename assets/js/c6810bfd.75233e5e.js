"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[121],{3613:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var n=s(5893),i=s(1151);const o={sidebar_position:1},l="Introduction",r={id:"intro",title:"Introduction",description:"golangci-test aggregates test utilities for Go.",source:"@site/docs/1-intro.md",sourceDirName:".",slug:"/intro",permalink:"/golangci-test/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/fridaybyte/golangci-test/tree/main/packages/create-docusaurus/templates/shared/docs/1-intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Gitlab Integration",permalink:"/golangci-test/docs/CI Integration/gitlab"}},a={},c=[{value:"Features",id:"features",level:2},{value:"Quick start",id:"quick-start",level:2},{value:"Installation",id:"installation",level:3},{value:"Usage",id:"usage",level:3}];function d(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"golangci-test"})," aggregates test utilities for Go.\nIt creates a simple way to run concurrent tests on multiple instances\nwhile using standard Go built-in tools."]}),"\n",(0,n.jsx)(t.admonition,{type:"danger",children:(0,n.jsx)(t.p,{children:"If you somehow end up on this repo, please wait a few days before\nusing it. It goes through a lot of changes, and it's not ready for\nproduction use yet."})}),"\n",(0,n.jsxs)(t.admonition,{type:"warning",children:[(0,n.jsx)(t.p,{children:"This project is still in early development stage."}),(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Use it at your own risk"}),"."]})]}),"\n",(0,n.jsx)(t.h2,{id:"features",children:"Features"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Split tests into a specified number of groups so that each group:","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"has similar execution time"}),"\n",(0,n.jsx)(t.li,{children:"has similar even number of tests in each package"}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.li,{children:"Run tests based on the generated splits"}),"\n",(0,n.jsx)(t.li,{children:"Aggregate test results so that e.g. coverage could be generated"}),"\n",(0,n.jsxs)(t.li,{children:["Detect new packages with tests that aren't included in splits","\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"either distribute them between the groups and log info to the\nconsole about the missing packages"}),"\n",(0,n.jsx)(t.li,{children:"or fail the test jobs"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"quick-start",children:"Quick start"}),"\n",(0,n.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"go install github.com/mflotynski/golangci-test\n"})}),"\n",(0,n.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(t.p,{children:"To run tests concurrently, you first need to split your tests into\nmultiple group of packages. The best way to do this would be to run\nthem and measure how long each tests takes. Finally, tests could be\nsplit into groups of similar execution time."}),"\n",(0,n.jsxs)(t.p,{children:["This is a behaviour that ",(0,n.jsx)(t.code,{children:"splitter"})," module enables.\nThere are other methods to split tests, but this is supposed to\ngenerate near-optimal splits in reference to the execution time of\ntest jobs. For other ways to split tests, see the [splitter docs]\npage."]}),"\n",(0,n.jsx)(t.p,{children:"The splitter can be run with the following command:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"golangci-test split --type=time --jobs=4 --output=.golangci-test-splits.json\n"})}),"\n",(0,n.jsxs)(t.p,{children:["This will split all of the tests into 4 groups based on their\nexecution time.\nThe results will be saved in ",(0,n.jsx)(t.code,{children:".golangci-test-splits.json"})," file."]}),"\n",(0,n.jsx)(t.p,{children:"The next step is to run the tests.\nThis can be done with the following command:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"golangci-test test --instance-index=3 --output=.golangci-test-results.json\n"})}),"\n",(0,n.jsx)(t.p,{children:"This will execute the tests from the 3th group (counted from 0 or 1\nTODO: FIND WHAT DOES GITLAB RETURNS AS THE FIRST INSTANCE INDEX)."}),"\n",(0,n.jsx)(t.p,{children:"By default, the command will detect test packages that weren't\nincluded in the test splits and distribute them between the groups."})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);